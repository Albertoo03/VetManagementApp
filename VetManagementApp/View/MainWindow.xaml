<Window x:Class="VetManagementApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VetManagementApp"
        xmlns:vm="clr-namespace:VetManagementApp.ViewModel"
        xmlns:conv="clr-namespace:VetManagementApp.Converters"
        mc:Ignorable="d"
        Title="Vet management app" Height="768" Width="1024"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
    <Window.Resources>
        <conv:SelectedCustomerConverter x:Key="SelectedCustomerConverter"/>
        <conv:IsObjectNullToBooleanConverter x:Key="IsObjectNullToBooleanConverter"/>
    </Window.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top" Height="40">
            <Menu DockPanel.Dock="Top" Margin="0 0 0 20">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save database" IsEnabled="False"/>
                    <MenuItem Header="_Read existing database" IsEnabled="False"/>
                    <Separator/>
                    <MenuItem Header="_Exit" IsEnabled="True" Command="{Binding ExitTheAppAsyncCommand}"/>
                </MenuItem>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                <MenuItem Header="_Help"/>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                <MenuItem Header="_Preliminary database filling"/>
            </Menu>
        </DockPanel>
        <DockPanel DockPanel.Dock="Bottom" Height="80">
            <Border BorderThickness="1" BorderBrush="Gray" Margin="10 1 10 1" >
                <StackPanel Orientation="Vertical">
                    <Border BorderBrush="Gray" BorderThickness="1">
                        <Label Content="Messages:" Height="30"/>
                    </Border>
                    <TextBlock Text="{Binding HintsForUser, Mode=OneWay}"></TextBlock>
                </StackPanel>
            </Border>
        </DockPanel>
        <DockPanel DockPanel.Dock="Left" Width="674">
            <TabControl>
                <TabItem x:Name="HomeTab" Header="Home" IsSelected="True">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock FontSize="20" Text="Welcome to the app, vet!" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock FontSize="20" Text="Please take the appriopriate action." HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                </TabItem>
                <TabItem x:Name="AppointmentsTab" Header="Appointments">
                    <TabControl>
                        <TabItem x:Name="AddNewAppointmentsTab" Header="Add new appointment">
                            <StackPanel Orientation="Vertical" Margin="0 5 0 0" Width="500">
                                    <GroupBox Header="Customer" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                <RadioButton x:Name="AddNewCustomer" Content="Add new customer" GroupName="AppointmentCustomer" Margin="10 0 0 5" IsChecked="True"/>
                                                <RadioButton x:Name="SelectExistingCustomer" Content="Select customer from database" GroupName="AppointmentCustomer" Margin="10 0 0 0"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Margin="100 0 100 0">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=AddNewCustomer, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="First name: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddFirstName, Mode=TwoWay}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="Last name: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddLastName, Mode=TwoWay}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="City: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddCity, Mode=TwoWay}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="Street: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddStreet, Mode=TwoWay}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="House number: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddHouseNumber, Mode=TwoWay}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="Postal code: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddPostalCode, Mode=TwoWay}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                    <Label Content="Contact: "/>
                                                    <TextBox Width="50" Padding="0 3 0 0" Text="{Binding CustomerToAddContact, Mode=TwoWay}"/>
                                                </StackPanel>
                                            </StackPanel>
                                        <StackPanel Orientation="Vertical" Margin="-240 0 100 0">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=SelectExistingCustomer, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <DataGrid ItemsSource="{Binding Customers}" AutoGenerateColumns="False" IsReadOnly="True" SelectedItem="{Binding SelectedCustomerInAppointmentTab}" SelectionMode="Single" SelectionUnit="FullRow" Height="220">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Full name" Binding="{Binding FullName}"/>
                                                    <DataGridTextColumn Header="Address" Binding="{Binding Address}"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </StackPanel>
                                    </StackPanel>
                                        
                                    </GroupBox>
                                    <GroupBox Header="Appointment info" >
                                        <StackPanel Orientation="Vertical" Margin="100 0 0 0">
                                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                <Label Content="Animal: "/>
                                                <ComboBox Width="120" IsEditable="True"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                <Label Content="Purpose of visit: "/>
                                                <ComboBox Width="120" ItemsSource="{Binding Source={StaticResource enumPurposes}}" SelectedItem="{Binding SelectedPurposeOfVisit, Mode=OneWayToSource}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                <Label Content="Date: "/>
                                            <DatePicker SelectedDate="{Binding SelectedAppointmentDate}"/>
                                        </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                <Label Content="Description: "/>
                                                <TextBox Width="300" Height="100" Padding="0 3 0 0" Text="{Binding AppointmentDescription, Mode=TwoWay}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </GroupBox>
                                    <Button Content="Make an appointment" Command="{Binding MakeAnAppointmentAsyncCommand}" Width="150" Height="30" Margin="0 20 0 0" IsEnabled="False"/>
                                </StackPanel>
                             
                        </TabItem>
                        <TabItem x:Name="ManageAppointmentsTab" Header="Manage appointments">
                            <DockPanel Margin="10">
                                <DockPanel DockPanel.Dock="Left">
                                    <DataGrid ItemsSource="{Binding CurrentAppointments}" Width="450" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False" SelectedItem="{Binding SelectedAppointment, Mode=OneWayToSource}">
                                        <DataGrid.Columns >
                                            <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                                            <DataGridTextColumn Header="Customer" Binding="{Binding AppointedCustomer}"/>
                                            <DataGridTextColumn Header="Animal" Binding="{Binding AppointedAnimal}"/>
                                            <DataGridTextColumn Header="Purpose of visit" Binding="{Binding PurposeOfVisit}"/>
                                            <DataGridTextColumn Header="Date" Binding="{Binding Date}"/>
                                            <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </DockPanel>
                                <DockPanel>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Button Command="{Binding RemoveSelectedAppointmentAsyncCommand, Mode=OneWay}" Content="Remove selected appointment" Margin="0 0 0 10"/>
                                        <Button Command="{Binding EditSelectedAppointmentAsyncCommand, Mode=OneWay}" Content="Edit selected appointment"/>
                                    </StackPanel>
                                </DockPanel>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem x:Name="CustomersTab" Header="Customers">
                    <DockPanel Margin="10">
                        <DockPanel DockPanel.Dock="Bottom" Height="100">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Button Command="{Binding RemoveSelectedCustomerAsyncCommand}" Content="Remove selected customer" Margin="0 0 30 0" Width="150" Height="40"/>
                                <Button Content="Edit selected customer"/>
                            </StackPanel>
                        </DockPanel>
                        <DockPanel>
                            <DataGrid ItemsSource="{Binding Customers}" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                                <DataGrid.SelectedItem>
                                    <Binding Path="SelectedCustomer" Converter="{StaticResource SelectedCustomerConverter}" Mode="OneWayToSource"/>
                                </DataGrid.SelectedItem>
                            </DataGrid>
                        </DockPanel>

                    </DockPanel>
                </TabItem>
                <TabItem x:Name="TreatedAnimalsTab" Header="Treated animals">
                    <DockPanel Margin="10">
                        <DataGrid ItemsSource="{Binding CurrentlyTreatedAnimals}" AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="Species" Binding="{Binding SpeciesInfo.Species}"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                                <DataGridTextColumn Header="Gender" Binding="{Binding Gender}"/>
                                <DataGridTextColumn Header="Group" Binding="{Binding SpeciesInfo.Group}"/>
                                <DataGridTextColumn Header="Owner" Binding="{Binding Owner.FullName}"/>
                                <DataGridTextColumn Header="IsTreated" Binding="{Binding IsCurrentlyBeingTreated}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
        <DockPanel DockPanel.Dock="Right" Width="340">
            <StackPanel Orientation="Vertical" Width="340">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=HomeTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Home actions" HorizontalAlignment="Center" FontSize="20" FontWeight="Bold" Margin="0 50 0 20" />
                <GroupBox Header="Actions">
                    <StackPanel Orientation="Vertical">
                        <Button Command="{Binding FillDatabaseWithPreliminaryDataAsyncCommand}" Margin="20 10 20 10" Width="120">
                            <TextBlock Text="Fill database with preliminary data" TextAlignment="Center" TextWrapping="Wrap"/>
                        </Button>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="-340 0 0 0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=AppointmentsTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Appointments actions" HorizontalAlignment="Center" Margin="0 50 0 0" FontSize="20" FontWeight="Bold"/>
                <StackPanel Orientation="Vertical">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ManageAppointmentsTab, Path=IsSelected}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <GroupBox Header="Actions" Padding="10">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <Button Margin="0 0 20 0" Width="100" Height="40">
                                    <TextBlock Text="Show only past appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                </Button>
                                <Button Width="120" Height="40">
                                    <TextBlock Text="Show only coming appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <StackPanel Orientation="Vertical" Margin="0 250 0 0">
                        <Label Content="Selected appointment description:" HorizontalAlignment="Center" FontSize="16"/>
                        <TextBlock Text="{Binding SelectedAppointment.Description, Mode=OneWay}" Width="300" Height="100" TextWrapping="Wrap" HorizontalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="-340 0 0 0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=CustomersTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Customers actions" HorizontalAlignment="Center" Margin="0 50 0 0" FontSize="20" FontWeight="Bold"/>
                <GroupBox Header="Actions" IsEnabled="{Binding SelectedCustomer, Converter={StaticResource IsObjectNullToBooleanConverter}}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <RadioButton x:Name="ShowOwnedAnimals" Width="120" Margin="0 0 20 0" GroupName="CustomerAction" IsChecked="False">
                            <TextBlock Text="Show owned animals" TextAlignment="Center" TextWrapping="Wrap"/>
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <ToggleButton Content="{Binding Path=(Content), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                        <RadioButton x:Name="ShowAppointmentsHistory" Width="120" GroupName="CustomerAction" IsChecked="False">
                            <TextBlock Text="Show appointments history" TextAlignment="Center" TextWrapping="Wrap"/>
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <ToggleButton Content="{Binding Path=(Content), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </StackPanel>
                </GroupBox>
                <StackPanel Orientation="Vertical" Margin="0 50 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowOwnedAnimals, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <CheckBox Content="Show only treated animals"/>
                    <DataGrid ItemsSource="{Binding SelectedCustomer.OwnedAnimals}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id"/>
                            <DataGridTextColumn Header="Name"/>
                            <DataGridTextColumn Header="Gender"/>
                            <DataGridTextColumn Header="IsCurrentlyBeingTreated"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 -350 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowAppointmentsHistory, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <CheckBox Content="Show only past appointments"/>
                    <DataGrid ItemsSource="{Binding SelectedCustomer.Appointments}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id"/>
                            <DataGridTextColumn Header="Purpose of visit"/>
                            <DataGridTextColumn Header="Animal"/>
                            <DataGridTextColumn Header="Date"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="-340 0 0 0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TreatedAnimalsTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Animals actions" HorizontalAlignment="Center" Margin="0 50 0 0" FontSize="20" FontWeight="Bold"/>
                <GroupBox Header="Actions" IsEnabled="{Binding SelectedAnimal, Converter={StaticResource IsObjectNullToBooleanConverter}}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton x:Name="ShowHistoryOfAppointments" Width="120" Margin="0 0 20 0" GroupName="CustomerAction" IsChecked="False">
                                <TextBlock Text="Show history of appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ToggleButton Content="{Binding Path=(Content), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <RadioButton x:Name="ShowAssignedMedicines" Width="120" GroupName="CustomerAction" IsChecked="False">
                                <TextBlock Text="Show assigned medicines" TextAlignment="Center" TextWrapping="Wrap"/>
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ToggleButton Content="{Binding Path=(Content), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 0">
                            <RadioButton x:Name="ShowAvailableMedicines" Width="120" GroupName="CustomerAction" IsChecked="False">
                                <TextBlock Text="Show available medicines" TextAlignment="Center" TextWrapping="Wrap"/>
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ToggleButton Content="{Binding Path=(Content), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <StackPanel Orientation="Vertical" Margin="0 50 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowHistoryOfAppointments, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <DataGrid ItemsSource="{Binding SelectedAnimal.Appointments}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                            <DataGridTextColumn Header="Purpose of visit" Binding="{Binding PurposeOfVisit}"/>
                            <DataGridTextColumn Header="Owner" Binding="{Binding AppointedCustomer}"/>
                            <DataGridTextColumn Header="Date" Binding="{Binding Date}"/>
                            <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 -350 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowAssignedMedicines, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <DataGrid ItemsSource="{Binding SelectedAnimal.AssignedMedicines}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                            <DataGridTextColumn Header="Purpose of visit" Binding="{Binding PurposeOfVisit}"/>
                            <DataGridTextColumn Header="Owner" Binding="{Binding AppointedCustomer}"/>
                            <DataGridTextColumn Header="Date" Binding="{Binding Date}"/>
                            <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </StackPanel>

        </DockPanel>
    </DockPanel>
    <!--<Grid>
        <TextBox Text="{Binding Path=TestText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="100" Height="40"/>
    </Grid>-->
</Window>
