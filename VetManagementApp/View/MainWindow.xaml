<Window x:Class="VetManagementApp.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VetManagementApp"
        xmlns:localview="clr-namespace:VetManagementApp.View"
        xmlns:vm="clr-namespace:VetManagementApp.ViewModel"
        xmlns:val="clr-namespace:VetManagementApp.Validators"
        xmlns:conv="clr-namespace:VetManagementApp.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="Vet management app" Height="768" Width="1024"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
    <Window.Resources>
        <conv:IsObjectNullToBooleanConverter x:Key="IsObjectNullToBooleanConverter"/>
        <conv:GenderSelectionConverter x:Key="GenderSelectionConverter"/>
        <conv:IsAssignMedicinesEnabledMultiConverter x:Key="IsAssignMedicinesEnabledMultiConverter"/>
    </Window.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Top" Height="30">
            <Menu DockPanel.Dock="Top" Margin="0 0 0 10">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save database" IsEnabled="False"/>
                    <MenuItem Header="_Read existing database" IsEnabled="False"/>
                    <Separator/>
                    <MenuItem Header="_Exit" IsEnabled="True" Command="{Binding ExitTheAppAsyncCommand}"/>
                </MenuItem>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                <MenuItem Header="_Help"/>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
            </Menu>
        </DockPanel>
        <DockPanel DockPanel.Dock="Bottom" Height="80" Margin="0 10 0 0">
            <Border BorderThickness="1" BorderBrush="Gray" Margin="10 1 10 1" >
                <StackPanel Orientation="Vertical">
                    <Border BorderBrush="Gray" BorderThickness="1">
                        <Label Content="Messages:" Height="30"/>
                    </Border>
                    <TextBlock x:Name="HintsTextBlock" Height="40">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value=" "/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=RemoveSelectedCustomer, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Text" Value="Removes selected customer from database"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=RemoveAllCustomers, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Text" Value="Removes all customers from database"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=CustomersDataGrid, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Text" Value="Select any of customers to enable some actions."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=ShowOwnedAnimals, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Text" Value="Shows animals owned by selected customer."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=ShowAppointmentsHistory, Path=IsMouseOver}" Value="True">
                                        <Setter Property="Text" Value="Shows appointments of selected customer."/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Border>
        </DockPanel>
        <DockPanel DockPanel.Dock="Left" Width="674">
            <TabControl>
                <TabItem x:Name="HomeTab" Header="Home" IsSelected="True">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock FontSize="20" Text="Welcome to the app, vet!" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock FontSize="20" Text="Please take the appriopriate action." HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                </TabItem>
                <TabItem x:Name="AppointmentsTab" Header="Appointments">
                    <TabControl>
                        <TabItem x:Name="AddNewAppointmentsTab" Header="Add new appointment">
                            <StackPanel Orientation="Vertical" Margin="0 5 0 0" Width="600">
                                <GroupBox Header="Customer" HorizontalAlignment="Center" Width="{Binding Path=Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel},AncestorLevel=1}}" Height="200" Margin="0 20 0 0">
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                            <RadioButton x:Name="AddNewCustomer" Content="New customer" GroupName="AppointmentCustomer" IsChecked="{Binding AddNewCustomerIsChecked, Mode=TwoWay, FallbackValue=True}" Margin="10 0 0 5"/>
                                            <RadioButton x:Name="SelectExistingCustomer" Content="Customer from database" GroupName="AppointmentCustomer" IsChecked="{Binding CustomerFromDatabaseIsChecked, Mode=OneWayToSource}" Margin="10 0 0 0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Width="370" Margin="20 0 0 0">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=AddNewCustomer, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <StackPanel Orientation="Vertical" Margin="0 0 20 0" Width="170" VerticalAlignment="Center">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="70"/>
                                                        <ColumnDefinition Width="90"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                    </Grid.RowDefinitions>
                                                    <Label Content="First name: " Grid.Row="0" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2" Text="{Binding CustomerToAddFirstName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Row="0" Grid.Column="1"/>
                                                    <Label Content="City: " Grid.Row="1" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2"  Text="{Binding CustomerToAddCity, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Row="1" Grid.Column="1"/>
                                                    <Label Content="Street: " Grid.Row="2" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2"  Text="{Binding CustomerToAddStreet, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Row="2" Grid.Column="1"/>
                                                    <Label Content="Contact: " Grid.Row="3" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2"  Text="{Binding CustomerToAddContact, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Row="3" Grid.Column="1"/>

                                                </Grid>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Margin="0 0 0 0" Width="170" VerticalAlignment="Center">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=AddNewCustomer, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="70"/>
                                                        <ColumnDefinition Width="90"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                    </Grid.RowDefinitions>
                                                    <Label Content="Last name: " Grid.Row="0" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2"  Text="{Binding CustomerToAddLastName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Row="0" Grid.Column="1"/>
                                                    <Label Content="Postal code: " Grid.Row="1" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2"  Text="{Binding CustomerToAddPostalCode, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Grid.Row="1" Grid.Column="1"/>
                                                    <Label Content="House nr: " Grid.Row="2" Grid.Column="0"/>
                                                    <TextBox x:Name="HouseNumberTextBox" Margin= "0 2 0 2" Grid.Row="2" Grid.Column="1" Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                                                        <TextBox.Text>
                                                            <Binding Path="CustomerToAddHouseNumber" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <val:HouseNumberValidator/>
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </TextBox.Text>
                                                    </TextBox>
                                                </Grid>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Width="370" Margin="-370 0 0 0">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=SelectExistingCustomer, Path=IsChecked}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <DataGrid ItemsSource="{Binding Customers}" AutoGenerateColumns="False" IsReadOnly="True" SelectedItem="{Binding SelectedCustomerInAppointmentTab, Mode=OneWayToSource}" SelectionMode="Single" SelectionUnit="FullRow" Height="170" Margin="60 0 0 0">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Full name" Binding="{Binding FullName}" Width="120"/>
                                                    <DataGridTextColumn Header="Address" Binding="{Binding Address}" Width="120"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </StackPanel>
                                    </StackPanel>
                                </GroupBox>
                                <StackPanel Orientation="Horizontal">
                                    <GroupBox Header="Animal" Width="250">
                                        <StackPanel Orientation="Vertical">
                                            <StackPanel Orientation="Vertical" Height="180">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=NewAnimalRadioButton, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=AddNewCustomer, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <Grid Margin="0 40 0 0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="70"/>
                                                        <ColumnDefinition Width="120"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="30"/>
                                                    </Grid.RowDefinitions>
                                                    <Label Content="Name: " Grid.Row="0" Grid.Column="0"/>
                                                    <TextBox Margin= "0 2 0 2"  Text="{Binding AnimalToAddName, Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>
                                                    <Label Content="Species: " Grid.Row="1" Grid.Column="0"/>
                                                    <ComboBox ItemsSource="{Binding AnimalBasicInfos}" Grid.Row="1" Grid.Column="1" Margin="0 2 0 2" SelectedItem="{Binding AnimalToAddSpecies, Mode=TwoWay}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Species}" TextAlignment="Left" TextWrapping="Wrap" FontSize="12"/>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <Label Content="Gender: " Grid.Row="2" Grid.Column="0"/>
                                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                                                        <RadioButton Content="Female" GroupName="GenderGroup" IsChecked="True" Margin="0 0 15 0" />
                                                        <RadioButton Content="Male" GroupName="GenderGroup" IsChecked="{Binding AnimalToAddGender, Converter={StaticResource GenderSelectionConverter}, Mode=TwoWay}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </StackPanel>
                                            <StackPanel Orientation="Vertical" Height="180" Margin="0 -180 0 0">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=SelectExistingCustomer, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <StackPanel Orientation="Horizontal" Margin="0 10 0 0" HorizontalAlignment="Center">
                                                    <RadioButton x:Name="NewAnimalRadioButton" Content="New animal" GroupName="AnimalCreateOption" IsChecked="{Binding AddNewAnimalIsChecked, Mode=TwoWay}" Width="90" Margin="0 0 15 0"/>
                                                    <RadioButton x:Name="AnimalFromDbRadioButton" Content="Animal from db" IsChecked="{Binding AnimalFromDatabaseIsChecked, Mode=OneWayToSource}" GroupName="AnimalCreateOption"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical" Height="150" Margin="0 5 0 0">
                                                    <StackPanel.Style>
                                                        <Style TargetType="StackPanel">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=AnimalFromDbRadioButton, Path=IsChecked}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </StackPanel.Style>
                                                    <ListView ItemsSource="{Binding SelectedCustomerInAppointmentTab.OwnedAnimals, Mode=OneWay}" SelectedItem="{Binding SelectedAnimalInAppointmentTab, Mode=TwoWay}" Margin="0 10 0 0" Height="130">
                                                        <ListView.View>
                                                            <GridView AllowsColumnReorder="False">
                                                                <GridViewColumn Header="Name" Width="100">
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBlock Text="{Binding Name, Mode=OneWay}" FontSize="12" TextAlignment="Left" TextWrapping="Wrap"/>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                                <GridViewColumn Header="Species" Width="100">
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBlock Text="{Binding SpeciesInfo.Species, Mode=OneWay}" FontSize="12" TextAlignment="Left" TextWrapping="Wrap"/>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                            </GridView>
                                                        </ListView.View>
                                                    </ListView>
                                                    <!--<ComboBox x:Name="AppointmentAnimalsComboBox" Margin="0 2 0 2" ItemsSource="{Binding SelectedCustomerInAppointmentTab.OwnedAnimals}" IsEditable="True" Grid.Row="0" Grid.Column="1" Width="150">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Name}" FontSize="12" TextAlignment="Left" TextWrapping="Wrap"/>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>-->
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>

                                    </GroupBox>
                                    <GroupBox Header="Appointment info" >
                                        <StackPanel Orientation="Vertical" Margin="0 20 0 0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="90"/>
                                                    <ColumnDefinition Width="250"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="90"/>
                                                </Grid.RowDefinitions>

                                                <Label Content="Purpose of visit: " Grid.Row="0" Grid.Column="0"/>
                                                <ComboBox Margin="0 2 0 2"  ItemsSource="{Binding Source={StaticResource enumPurposes}}" SelectedItem="{Binding AppointmentPurposeOfVisit, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" Width="150"/>
                                                <Label Content="Date: " Grid.Row="1" Grid.Column="0"/>
                                                <DatePicker Margin="0 2 0 2" SelectedDate="{Binding AppointmentDate, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" Width="150"/>
                                                <Label Content="Description: " Grid.Row="2" Grid.Column="0"/>
                                                <TextBox Margin="0 2 0 2" Padding="0 3 0 0" Text="{Binding AppointmentDescription, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>
                                            </Grid>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                                <Button Content="Make an appointment" Command="{Binding MakeAnAppointmentAsyncCommand}" Width="150" Height="30" Margin="0 20 0 0">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=HouseNumberTextBox}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                             
                        </TabItem>
                        <TabItem x:Name="ManageAppointmentsTab" Header="Manage appointments">
                            <DockPanel Margin="10">
                                <DockPanel DockPanel.Dock="Top" Height="300">
                                    <DockPanel DockPanel.Dock="Left">
                                        <DataGrid ItemsSource="{Binding FilteredAppointments}" Width="480" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False" IsReadOnly="True" SelectedItem="{Binding SelectedAppointment, Mode=OneWayToSource}">
                                            <DataGrid.Columns >
                                                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                                                <DataGridTextColumn Header="Customer" Binding="{Binding AppointedCustomer}" Width="140"/>
                                                <DataGridTextColumn Header="Animal" Binding="{Binding AppointedAnimal}" Width="110"/>
                                                <DataGridTextColumn Header="Purpose of visit" Binding="{Binding PurposeOfVisit}" Width="100"/>
                                                <DataGridTextColumn Header="Date" Binding="{Binding Date.Date}" Width="90"/>
                                                <DataGridTextColumn Header="State" Binding="{Binding StateOfVisit}" Width="100"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DockPanel>
                                    <DockPanel>
                                        <Button Command="{Binding RemoveSelectedAppointmentAsyncCommand, Mode=OneWay}" Margin="0 0 0 10" HorizontalAlignment="Center" Width="120" Height="40">
                                            <TextBlock Text="Remove selected appointment" TextAlignment="Center" TextWrapping="Wrap"/>
                                        </Button>
                                    </DockPanel>
                                </DockPanel>
                                <DockPanel>
                                    <GroupBox Header="Appointment management">
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="550" Height="200">
                                            <StackPanel Orientation="Horizontal" Height="130" Margin="0 30 0 10">
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Label Content="Status: "/>
                                                    <ComboBox ItemsSource="{Binding Source={StaticResource enumStateOfVisit}}" IsEnabled="{Binding SelectedAppointment, Converter={StaticResource IsObjectNullToBooleanConverter}}" Width="120" SelectedItem="{Binding SelectedStatusOfVisit, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="20 0 0 0" Height="140">
                                                    <Label Content="Available medicines: "/>
                                                    <ListView x:Name="AvailableMedicinesListView" ItemsSource="{Binding SelectedAppointment.AppointedAnimal.SpeciesInfo.AvailableMedicines}" ToolTip="Double click on selected medicine to assign it to selected treated animal." Height="100" SelectionMode="Single">
                                                        <ListView.IsEnabled>
                                                            <MultiBinding Converter="{StaticResource IsAssignMedicinesEnabledMultiConverter}">
                                                                <Binding Path="SelectedAppointment" Converter="{StaticResource IsObjectNullToBooleanConverter}"/>
                                                                <Binding Path="SelectedAppointment.StateOfVisit"/>
                                                            </MultiBinding>
                                                        </ListView.IsEnabled>
                                                        <!--<ListView.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock x:Name="ItemTemp" Text="{Binding Name}" FontSize="12" TextAlignment="Left" TextWrapping="Wrap">
                                                                    <TextBlock.InputBindings>
                                                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.LeftMouseDoubleClickAsyncCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding ElementName=AvailableMedicines, Path=SelectedItem}"/>
                                                                    </TextBlock.InputBindings>
                                                                </TextBlock>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>-->
                                                        <ListView.View>
                                                            <GridView AllowsColumnReorder="False">
                                                                <GridViewColumn Header="Name" Width="145" >
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBlock Text="{Binding Name}" FontSize="12" TextAlignment="Left" TextWrapping="Wrap">
                                                                                <TextBlock.InputBindings>
                                                                                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.LeftMouseDoubleClickOnAvailableMedicinesAsyncCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding ElementName=AvailableMedicinesListView, Path=SelectedItem}"/>
                                                                                </TextBlock.InputBindings>
                                                                            </TextBlock>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                            </GridView>
                                                        </ListView.View>

                                                    </ListView>
                                                </StackPanel>
                                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="20 0 0 0" Height="140">
                                                    <Label Content="Assigned medicines: "/>
                                                    <ListView x:Name="AssignedMedicinesListView" ItemsSource="{Binding SelectedAppointment.AppointedAnimal.AssignedMedicines}" ToolTip="Double click on selected medicine to unassign it from selected treated animal." Height="100">
                                                        <ListView.View>
                                                            <GridView AllowsColumnReorder="False">
                                                                <GridViewColumn Header="Name" Width="145" >
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBlock Text="{Binding Name}" FontSize="12" TextAlignment="Left" TextWrapping="Wrap">
                                                                                <TextBlock.InputBindings>
                                                                                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.LeftMouseDoubleClickOnAssignedMedicinesAsyncCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding ElementName=AssignedMedicinesListView, Path=SelectedItem}"/>
                                                                                </TextBlock.InputBindings>
                                                                            </TextBlock>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                            </GridView>
                                                        </ListView.View>
                                                    </ListView>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                       
                                    </GroupBox>
                                    
                                </DockPanel>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem x:Name="CustomersTab" Header="Customers">
                    <DockPanel Margin="10">
                        <DockPanel DockPanel.Dock="Bottom" Height="100">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Button x:Name="RemoveSelectedCustomer" Command="{Binding RemoveSelectedCustomerAsyncCommand}" Content="Remove selected customer" Margin="0 0 30 0" Width="150" Height="40" IsEnabled="{Binding SelectedCustomer, Converter={StaticResource IsObjectNullToBooleanConverter}}"/>
                                <Button x:Name="RemoveAllCustomers" Content="Remove all customers" Command="{Binding RemoveAllCustomersAsyncCommand}"/>
                            </StackPanel>
                        </DockPanel>
                        <DockPanel>
                            <DataGrid x:Name="CustomersDataGrid" ItemsSource="{Binding Customers}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False" IsReadOnly="True" SelectedItem="{Binding SelectedCustomer, Mode=OneWayToSource}" SelectionMode="Single" SelectionUnit="FullRow">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                                    <DataGridTextColumn Header="First name" Binding="{Binding FirstName}" Width="80"/>
                                    <DataGridTextColumn Header="Last name" Binding="{Binding LastName}" Width="100"/>
                                    <DataGridTextColumn Header="City" Binding="{Binding City}" Width="80"/>
                                    <DataGridTextColumn Header="Street" Binding="{Binding Street}" Width="90"/>
                                    <DataGridTextColumn Header="House nr" Binding="{Binding HouseNumber}" Width="60"/>
                                    <DataGridTextColumn Header="Postal code" Binding="{Binding PostalCode}" Width="100"/>
                                    <DataGridTextColumn Header="Phone number" Binding="{Binding Contact}" Width="100"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>

                    </DockPanel>
                </TabItem>
                <TabItem x:Name="TreatedAnimalsTab" Header="Treated animals">
                    <DockPanel Margin="10">
                        <DataGrid ItemsSource="{Binding TreatedAnimals}" AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False" IsReadOnly="True" Width="588" SelectionMode="Single" SelectionUnit="FullRow" SelectedItem="{Binding SelectedAnimal, Mode=OneWayToSource}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                                <DataGridTextColumn Header="Species" Binding="{Binding SpeciesInfo.Species}" Width="100"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="100"/>
                                <DataGridTextColumn Header="Gender" Binding="{Binding Gender}" Width="60"/>
                                <DataGridTextColumn Header="Group" Binding="{Binding SpeciesInfo.Group}" Width="80"/>
                                <DataGridTextColumn Header="Owner" Binding="{Binding Owner.FullName}" Width="140"/>
                                <DataGridTextColumn Header="IsTreated" Binding="{Binding IsCurrentlyBeingTreated}" Width="70"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
        <DockPanel DockPanel.Dock="Right" Width="340">
            <StackPanel Orientation="Vertical" Width="340">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=HomeTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Home actions" HorizontalAlignment="Center" FontSize="20" FontWeight="Bold" Margin="0 50 0 20" />
                <GroupBox Header="Actions">
                    <StackPanel Orientation="Vertical">
                        <Button Command="{Binding ShowPrefillingDatabaseWindowAsyncCommand}" Margin="20 10 20 10" Width="120">
                            <TextBlock Text="Fill database with preliminary data" TextAlignment="Center" TextWrapping="Wrap"/>
                        </Button>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="-340 0 0 0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=AppointmentsTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Appointments actions" HorizontalAlignment="Center" Margin="0 50 0 0" FontSize="20" FontWeight="Bold"/>
                <StackPanel Orientation="Vertical">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ManageAppointmentsTab, Path=IsSelected}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <GroupBox Header="Actions" Padding="10">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 10">
                                <RadioButton x:Name="ShowAllAppointmentsRadioButton" GroupName="AppointmentAction" IsChecked="{Binding ShowAllAppointmentsIsChecked, Mode=TwoWay}" Margin="0 0 20 0" Width="100" Height="40" >
                                    <TextBlock Text="Show all appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                    <RadioButton.Style>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RadioButton.Style>
                                </RadioButton>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <RadioButton GroupName="AppointmentAction" Margin="0 0 20 0" Width="100" Height="40" IsChecked="{Binding ShowOnlyPastAppointmentsIsChecked, Mode=TwoWay}">
                                    <TextBlock Text="Show only past appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                    <RadioButton.Style>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RadioButton.Style>
                                </RadioButton>
                                <RadioButton GroupName="AppointmentAction" Width="120" Height="40" IsChecked="{Binding ShowOnlyUpcomingAppointmentsIsChecked, Mode=TwoWay}">
                                    <TextBlock Text="Show only upcoming appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                    <RadioButton.Style>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RadioButton.Style>
                                </RadioButton>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <StackPanel Orientation="Vertical" Margin="0 250 0 0">
                        <Label Content="Selected appointment description:" HorizontalAlignment="Center" FontSize="16"/>
                        <Border BorderBrush="Gray" BorderThickness="1" Margin="5 0 5 0">
                            <TextBlock Text="{Binding SelectedAppointment.Description, Mode=OneWay}" Width="300" Height="100" TextWrapping="Wrap" HorizontalAlignment="Center"/>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="-340 0 0 0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=CustomersTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Customers actions" HorizontalAlignment="Center" Margin="0 50 0 0" FontSize="20" FontWeight="Bold"/>
                <GroupBox Header="Actions" IsEnabled="{Binding SelectedCustomer, Converter={StaticResource IsObjectNullToBooleanConverter}}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <RadioButton x:Name="ShowOwnedAnimals" Width="120" Margin="0 0 20 0" GroupName="CustomerAction" IsChecked="{Binding ShowOwnedAnimalsChecked, Mode=OneWayToSource}">
                            <TextBlock Text="Show owned animals" TextAlignment="Center" TextWrapping="Wrap"/>
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                        <RadioButton x:Name="ShowAppointmentsHistory" Width="120" GroupName="CustomerAction" IsChecked="{Binding ShowAppointmentsHistoryChecked, Mode=OneWayToSource}">
                            <TextBlock Text="Show appointments history" TextAlignment="Center" TextWrapping="Wrap"/>
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </StackPanel>
                </GroupBox>
                <StackPanel Orientation="Vertical" Margin="0 50 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowOwnedAnimals, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <CheckBox Content="Show only treated animals" Margin="0 0 0 10"/>
                    <DataGrid ItemsSource="{Binding SelectedCustomer.OwnedAnimals}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" Height="300" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="80"/>
                            <DataGridTextColumn Header="Species" Binding="{Binding SpeciesInfo.Species}" Width="70"/>
                            <DataGridTextColumn Header="Gender" Binding="{Binding Gender}" Width="50"/>
                            <DataGridTextColumn Header="Is being treated" Binding="{Binding IsCurrentlyBeingTreated}" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 -350 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowAppointmentsHistory, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <CheckBox Content="Show only past appointments" Margin="0 0 0 10"/>
                    <DataGrid ItemsSource="{Binding SelectedCustomer.Appointments}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" Height="300">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                            <DataGridTextColumn Header="Purpose of visit" Binding="{Binding PurposeOfVisit}" Width="100"/>
                            <DataGridTextColumn Header="Animal" Binding="{Binding AppointedAnimal}" Width="100"/>
                            <DataGridTextColumn Header="Date" Binding="{Binding Date}" Width="120"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                
            </StackPanel>
            <StackPanel Orientation="Vertical" Margin="-340 0 0 0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TreatedAnimalsTab, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Animals actions" HorizontalAlignment="Center" Margin="0 50 0 0" FontSize="20" FontWeight="Bold"/>
                <GroupBox Header="Actions" IsEnabled="{Binding SelectedAnimal, Converter={StaticResource IsObjectNullToBooleanConverter}}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton x:Name="ShowHistoryOfAppointments" Width="120" Margin="0 0 20 0" GroupName="AnimalAction" IsChecked="False">
                                <TextBlock Text="Show history of appointments" TextAlignment="Center" TextWrapping="Wrap"/>
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <RadioButton x:Name="ShowAssignedMedicines" Width="120" GroupName="AnimalAction" IsChecked="False">
                                <TextBlock Text="Show assigned medicines" TextAlignment="Center" TextWrapping="Wrap"/>
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 0">
                            <RadioButton x:Name="ShowAvailableMedicines" Width="120" GroupName="AnimalAction" IsChecked="False">
                                <TextBlock Text="Show available medicines" TextAlignment="Center" TextWrapping="Wrap"/>
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ToggleButton Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <StackPanel Orientation="Vertical" Margin="0 50 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowHistoryOfAppointments, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <DataGrid ItemsSource="{Binding SelectedAnimal.Appointments}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                            <DataGridTextColumn Header="Purpose" Binding="{Binding PurposeOfVisit}" Width="70"/>
                            <DataGridTextColumn Header="Owner" Binding="{Binding AppointedCustomer}" Width="100"/>
                            <DataGridTextColumn Header="Date" Binding="{Binding Date}" Width="100"/>
                            <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="150"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 -350 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowAssignedMedicines, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <DataGrid ItemsSource="{Binding SelectedAnimal.AssignedMedicines}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="100"/>
                            <DataGridTextColumn Header="Dose" Binding="{Binding Dose}" Width="60"/>
                            <DataGridTextColumn Header="Manufacturer" Binding="{Binding Manufacturer}" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0 -350 0 0" Width="310" Height="350">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShowAvailableMedicines, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <DataGrid ItemsSource="{Binding SelectedAnimal.SpeciesInfo.AvailableMedicines}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserDeleteRows="False" CanUserResizeColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="30"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="100"/>
                            <DataGridTextColumn Header="Dose" Binding="{Binding Dose}" Width="60"/>
                            <DataGridTextColumn Header="Manufacturer" Binding="{Binding Manufacturer}" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </StackPanel>

        </DockPanel>
    </DockPanel>
    <!--<Grid>
        <TextBox Text="{Binding Path=TestText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="100" Height="40"/>
    </Grid>-->
</Window>
